pipeline {
    agent {
        docker {
            image 'mcr.microsoft.com/dotnet/sdk:7.0' // Como usas net7.0 en tests
            args '-u root:root'
        }
    }

    environment {
        DOTNET_CLI_TELEMETRY_OPTOUT = '1'
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE = '1'
        PATH = "${env.HOME}/.dotnet/tools:${env.PATH}"
    }

    options {
        timestamps()
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Clonando el repositorio...'
                checkout scm
            }
        }

        stage('Restaurar dependencias') {
            steps {
                sh 'dotnet restore temas/delegacion/csharp/PrinterDelegationExample/csharp/PrinterDelegationExample.csproj'
                sh 'dotnet restore temas/delegacion/csharp/PrinterDelegationExample/test/test.csproj'
            }
        }

        stage('Compilar') {
            steps {
                sh 'dotnet build temas/delegacion/csharp/PrinterDelegationExample/csharp/PrinterDelegationExample.csproj --configuration Release'
                sh 'dotnet build temas/delegacion/csharp/PrinterDelegationExample/test/test.csproj --configuration Release'
            }
        }

        stage('Ejecutar Tests') {
            steps {
                sh 'dotnet test temas/delegacion/csharp/PrinterDelegationExample/test/test.csproj --logger trx;LogFileName=test_results.trx'
            }
        }

        stage('Convertir TRX a JUnit XML') {
            steps {
                sh 'dotnet tool install -g trx2junit || true'
                sh '/root/.dotnet/tools/trx2junit temas/delegacion/csharp/PrinterDelegationExample/test/TestResults/*.trx'
            }
        }

        stage('Publicar resultados de test') {
            steps {
                junit 'temas/delegacion/csharp/PrinterDelegationExample/test/TestResults/*.xml'
            }
        }
    }

    post {
        success {
            echo 'Pipeline finalizada con éxito.'
        }

        failure {
            echo 'La compilación o pruebas fallaron.'
        }
    }
}