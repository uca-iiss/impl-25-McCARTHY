pipeline {
    agent none
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python'
                }
            }
            steps {
                sh 'python -m py_compile temas/lambdas/python/app/procesador.py'
            }
        }
        stage('Test') {
	    agent {
		docker {
		    image 'python:3.9-slim'
		}
	    }
	    steps {
		sh '''
		    apt-get update && apt-get install -y python3-pip
		    pip install --prefix=/tmp/pytest pytest
		    export PYTHONPATH=/var/jenkins_home/workspace/lambdas/temas/lambdas/python:/tmp/pytest/lib/python3.9/site-packages
		    mkdir -p test-reports
		    python3 -m pytest --verbose --junit-xml=test-reports/results.xml tests/test_procesador.py
		    ls -la test-reports/
		'''
	    }
	    post {
		always {
		    junit 'test-reports/results.xml'
		}
	    }
	}
        stage('Deliver') {
            agent {
                docker {
                    image 'cdrx/pyinstaller-linux:python2'
                }
            }
            steps {
                sh 'pyinstaller --onefile temas/lambdas/python/app/procesador.py'
            }
            post {
                success {
                    archiveArtifacts 'dist/procesador'
                }
            }
        }
    }
}
